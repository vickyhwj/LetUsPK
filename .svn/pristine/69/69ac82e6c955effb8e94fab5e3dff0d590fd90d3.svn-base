package com.xiangqiwebsocket;

import java.util.Timer;
import java.util.TimerTask;

import net.sf.json.JSONObject;

import com.xiangqiwebsocket.WebSocketXiangqi;

import po.AbstractGameState;
import po.XiangqiGameState;
import po.XiangqiMove;

public class XiangqiTimer extends Thread {
	public static int TIME_SECOND = 20;
	XiangqiGameState xiangqiGameState;
	String gameMapKey;
	boolean stop=false;
	public int now;

	public boolean isStop() {
		return stop;
	}
	public void setStop(boolean stop) {
		this.stop = stop;
	}
	public int getNow() {
		return now;
	}
	public void setNow(int now) {
		this.now = now;
	}
	public XiangqiTimer(XiangqiGameState gameState,String timerName) {
		super(timerName);
		this.xiangqiGameState = gameState;
		String A=gameState.getA();
		String B=gameState.getB();
		gameMapKey=A.compareTo(B) <0? A+" "+B:B+" "+A; 
	}
	public void resetNow(){
		now=TIME_SECOND;
	}
	public void work() {
		// TODO Auto-generated method stub
		xiangqiGameState = (XiangqiGameState) xiangqiGameState;
		String turn = xiangqiGameState.getTurn();
		if (turn.equals(xiangqiGameState.getA()))
			xiangqiGameState.setTurn(xiangqiGameState.getB());
		else
			xiangqiGameState.setTurn(xiangqiGameState.getA());
		WebSocketXiangqi w1 = WebSocketXiangqi.socketMap.get(xiangqiGameState
				.getB());
		WebSocketXiangqi w2 = WebSocketXiangqi.socketMap.get(xiangqiGameState
				.getA());

		JSONObject gameObj = new JSONObject();
		gameObj.element("state", xiangqiGameState.getState());
		gameObj.element("A", xiangqiGameState.getA());
		gameObj.element("B", xiangqiGameState.getB());
		gameObj.element("type", 8);
		gameObj.element("turn", xiangqiGameState.getTurn());
		System.out.println(gameObj.toString());
		try {
			w1.sendMessage(gameObj.toString());
			w2.sendMessage(gameObj.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
		JSONObject timerObj = new JSONObject();
		timerObj.element("type", 33);
		timerObj.element("second", XiangqiTimer.TIME_SECOND);

		try {
			w1.sendMessage(timerObj.toString());
			w2.sendMessage(timerObj.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void run() {

		try {
			while (true) {
				check();
				if(stop){
					return;
				}
				Thread.sleep(1000);
				now--;
				if(now<0){
					now=XiangqiTimer.TIME_SECOND;
					work();
				}
					
			}
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			System.out.println("timer is end");
			e.printStackTrace();
		}

	}
	public void check(){
		XiangqiGameState xiangqiGameState1=WebSocketXiangqi.gameMap.get(gameMapKey);
		if(xiangqiGameState1!=xiangqiGameState) 
			stop=true;
	}

}
