<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.firegame.mapper.SecurityMapper">
	<resultMap type="po.Authority" id="authority">
		<id property="id" column="id"/>
		<result property="url" column="url"/>
		<association property="role" javaType="po.Role">
			<id property="roleid" column="roleId"/>
			<result property="description" column="description"/>
		</association>
	</resultMap>
	<resultMap type="po.UserRoles" id="userRoles">
		<id property="userid" column="userid"/>
		<result property="password" column="password"/>
		<collection property="roles" ofType="po.Role">
			<id property="roleid" column="roleid"/>
			<result property="description" column="description"/>
		</collection>
	
	</resultMap>
	

	<select id="findAllAuthority" resultMap="authority">
		select
			a.id as id,
			a.url as url,
			a.roleId as roleid,
			r.description as description
		from
			authority a
			join `role` r on
			a.roleId = r.roleId
		order by url

	</select>
	<select id="findUserRolesByUserId" resultMap="userRoles" parameterType="java.lang.String">
			select
				u.userid as userid,
				u.password as password,
				r.roleId roleid,
				r.description description
			from
				`user` u
				join userrole ur on
				u.userid = ur.userId
				join `role` r on
				r.roleId = ur.roleId
			where u.userid=#{userid} and isrun=1
		
	</select>
<select id="findUserRolesMapByUserId" resultType="map" parameterType="java.lang.String">
			select
				u.userid as userid,
				u.password as password,
				r.roleId roleid,
				r.description description
			from
				`user` u
				join userrole ur on
				u.userid = ur.userId
				join `role` r on
				r.roleId = ur.roleId
			where u.userid=#{userid} and isrun=1
		
	</select>
	<select id="findAllRoles" resultType="po.Role">
		select * from role
	</select>
	
	<update id="updateUserRoleIsRun" parameterType="map" >
		update userrole
		set isRun=#{isrun}
		where userId=#{userid} and roleId=#{roleid}
	</update>
	
	<insert id="insertUserRole" parameterType="po.Userrole" >
		insert into userrole(userId,roleId,isRun)
		values(#{userid},#{roleid},#{isrun})
	</insert>
	
	<select id="removeUser" parameterType="java.lang.String" statementType="CALLABLE">
		{call removeUser(#{userid})}
	</select>
	<select id="removeRole" parameterType="java.lang.String" statementType="CALLABLE">
		{call removeRole(#{userid})}
	</select>
	<delete id="removeAuth" parameterType="long">
		delete from authority where authority.id=#{aid};
	</delete>
	<insert id="insertRole" parameterType="po.Role">
		insert into role
		values(#{roleid},#{description})
	</insert>
	<insert id="insertAuth" parameterType="po.Authority">
		insert into authority(url,roleId)
		values(#{url},#{role.roleid})
	</insert>
</mapper>